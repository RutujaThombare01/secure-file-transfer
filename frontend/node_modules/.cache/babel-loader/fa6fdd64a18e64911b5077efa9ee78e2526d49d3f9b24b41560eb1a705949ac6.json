{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rutuja\\\\Desktop\\\\Secure-Doc-Share\\\\frontend\\\\src\\\\components\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UploadForm() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [secureLink, setSecureLink] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file first.\");\n    const formData = new FormData();\n    formData.append(\"file\", file); // ðŸ”¥ Make sure the key is exactly 'file'\n\n    try {\n      const response = await axios.post(\"http://localhost:5000/api/files/upload\", formData);\n      const token = response.data.token;\n      const link = response.data.accessLink; // Use what backend returns directly\n      setSecureLink(link);\n    } catch (error) {\n      var _error$response;\n      console.error(\"Upload failed:\", error);\n      alert(\"Upload failed: \" + ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Secure File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), secureLink && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Secure Link:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: secureLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: secureLink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadForm, \"yYYO3W3CF0Hu1xoymIRnc9fU9Ec=\");\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","UploadForm","_s","file","setFile","secureLink","setSecureLink","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","token","data","link","accessLink","error","_error$response","console","message","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/Rutuja/Desktop/Secure-Doc-Share/frontend/src/components/UploadForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UploadForm() {\r\n  const [file, setFile] = useState(null);\r\n  const [secureLink, setSecureLink] = useState(\"\");\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a file first.\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file); // ðŸ”¥ Make sure the key is exactly 'file'\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/files/upload\", formData);\r\n      const token = response.data.token;\r\n      const link = response.data.accessLink; // Use what backend returns directly\r\nsetSecureLink(link);\r\n\r\n    } catch (error) {\r\n      console.error(\"Upload failed:\", error);\r\n      alert(\"Upload failed: \" + (error?.response?.data || error.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Secure File Upload</h2>\r\n      <input type=\"file\" onChange={handleFileChange} />\r\n      <br /><br />\r\n      <button onClick={handleUpload}>Upload</button>\r\n      <br /><br />\r\n      {secureLink && (\r\n        <div>\r\n          <strong>Secure Link:</strong>\r\n          <p>\r\n            <a href={secureLink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {secureLink}\r\n            </a>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}